#include "firstlight.h"
#include "stream/DataStream.h"

namespace flt
{


DataStream::DataStream(Stream& stream) :
	Stream(),
	m_stream(stream)
{

}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------------------------------------------------

int DataStream::Read(void* buffer, int size)
{
	return m_stream.Read(buffer, size);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------------------------------------------------

int DataStream::Write(const void* buffer, int size)
{
	return m_stream.Write(buffer, size);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------------------------------------------------

void DataStream::Seek(int offset, int origin)
{
	m_stream.Seek(offset, origin);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------------------------------------------------

int DataStream::Tell() const
{
	return m_stream.Tell();
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------------------------------------------------

void DataStream::Skip(int count)
{
	Seek(count, io::cur);
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

bool DataStream::ReadBoolean()
{
	int ch = m_stream.Read();

	return ch != 0;
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

signed char DataStream::ReadByte()
{
	return m_stream.Read();
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

unsigned char DataStream::ReadUnsignedByte()
{
	return m_stream.Read();
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

short DataStream::ReadShort()
{
	return (short)ReadUnsignedShort();
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

unsigned short DataStream::ReadUnsignedShort()
{
	unsigned short s = 0;
	Read(&s, sizeof(unsigned short));
	return s;
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//char DataStream::ReadChar()
//{
//	return (char)ReadUnsignedShort();
//}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

int DataStream::ReadInt()
{
	int i = 0;
	Read(&i, sizeof(int));
	return i;
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//long DataStream::ReadLong()
//{
//	long l = 0;
//	Read(&l, sizeof(long));
//	l = NetworkToHostLong(l); 
//	return l;
//}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

char* DataStream::ReadUTF(char* buffer, int bufferLength)
{
	int length = ReadShort();
	FLT_ASSERT(bufferLength > length);
	Read(buffer, length);
	buffer[length] = 0;
	return buffer;
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

void DataStream::WriteBoolean(bool v)
{
	m_stream.Write(v ? 1 : 0);
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

void DataStream::WriteByte(int v)
{
	m_stream.Write(v);
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

void DataStream::WriteShort(int v)
{
	Write(&v, sizeof(short));
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//void DataStream::WriteChar(int v)
//{
//	WriteShort(v);
//}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

void DataStream::WriteInt(int v)
{
	Write(&v, sizeof(int));
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//void DataStream::WriteLong(long v)
//{
//	v = HostToNetworkLong(v);
//	Write(&v, sizeof(long));
//}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

void DataStream::WriteUTF(const char* string)
{
	int length = (int)strlen(string);
	WriteShort(length);
	Write(string, length);
}


}