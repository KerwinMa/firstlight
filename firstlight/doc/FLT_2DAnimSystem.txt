2D动画系统

> 从底层对动画进行统一的支持
> 2D角色动画，UI动画，物体动画的统一设计
> 某些设计和3D动画也通用，以后设计3D动画时可以修改2D动画使得接口统一

动画：利用基于时间的数据驱动控制物体的属性
关键帧：在某个时间对某个物体某种属性的改变值（可以是绝对值或改变量）
动画物体(IAnimable)：任意可以被动画驱动控制的元素，对于2D动画，包括UI控件，角色动画中的模块
动画参数：IAnimable具有的可被动画控制改变的参数
动画物体层次：IAnimable之间可以有树状关系，父的某些属性会对子产生影响，主要是位置和旋转（综合为transform矩阵）以及可见性，特殊情况：IAnimable可以选择某参数是否受父的影响。
 这种动画层次对于角色动画比较重用（包括3D骨骼动画和2D仿骨骼动画-关节动画），另外就是UI动画也会用到，主要是窗口和内部控件的关系

关键帧动画的基本组成：
Animation:一个动画，包括Tracks
Track:对于某个IAnimable的某个参数进行控制的一段数据，包含一堆KeyFrame，需要对IAnimable进行绑定（知道要控制谁的某个参数）
KeyFrame: 某个参数的关键帧数据，包括时间，参数值，到下一帧的插值类型

2D角色动画：
将传统的模块动画和关键帧插值动画进行结合，并具有骨骼动画的特点
模块具有层次


======================================================
new
======================================================
2D动画系统设计

2D动画元素统称Element
包括：
AnyElement: 用于绑定任意2D元素
ModuleElement: Image的一部分，图形元素
BoxElement: 标记框，各种作用（不可见）
 
动画: 由一组element的track组成。
track: 某个element的某个属性的keyframes
层次关系：element可以有任意个childern elements,但最多有一个parent。

element的动画属性：
基本属性(AnyElement)：translation 2d, rotation, scale
ModuleElements: color(r,g,b,a), size (注意和scale的区别），ModuleID: 用来切换module（传统的帧动画）
BoxElement:

(要考虑旋转中心的选择，是否有必要支持任意旋转中心）

动画属性有的可插值（如color)，有的不可插值（如module id）

模块动画:
1）无层次关系的：各module需要各自移动和旋转的key frame
2）有层次关系的：类似骨骼动画
（在FLT中，这两种是统一的，默认是无层次关系，编辑中通过link操作将element连接到父element上，编辑器的操作细节很重要，比如数据自动转换到父空间等等，又比如对于bip类型，自动生成dummy连接，编辑器需要详细讨论设计）

UI动画：
很类似模块动画，是统一的，他的动画数据还要支持UI的变色变形等等。

